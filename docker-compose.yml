services:
  db:
    image: mariadb:11.4
    container_name: fenixlight-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass123}
      MYSQL_DATABASE: ${DB_NAME:-fenix_russia_ru}
      MYSQL_USER: ${DB_USER:-fenixrussiaru}
      MYSQL_PASSWORD: ${DB_PASSWORD:-7P1a4N2o}
    volumes:
      - db-data:/var/lib/mysql
      - ./migrations/init-database.sql.gz:/docker-entrypoint-initdb.d/init.sql.gz:ro
    networks:
      - fenixlight-net
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build: ./docker
    image: fenixlight-web:${PHP_VERSION:-7.4}
    container_name: fenixlight-web
    restart: unless-stopped
    volumes:
      - ${WWW_PATH:-./www}:/var/www/html
      - ./config/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./config/apache-vhost.conf:/etc/apache2/sites-available/000-default.conf:ro
    networks:
      - fenixlight-net
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: fenixlight-nginx
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/fenixlight.conf:/etc/nginx/conf.d/default.conf:ro
      - ${SSL_PATH:-./ssl}:/etc/ssl/fenixlight:ro
      - ${SSL_PATH:-./ssl}/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
    networks:
      - fenixlight-net
    depends_on:
      - web

  backup:
    build:
      context: ./docker
      dockerfile: Dockerfile.backup
    container_name: fenixlight-backup
    restart: unless-stopped
    environment:
      - DB_USER=${DB_USER:-fenixrussiaru}
      - DB_PASSWORD=${DB_PASSWORD:-7P1a4N2o}
      - DB_NAME=${DB_NAME:-fenix_russia_ru}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/sa.json}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_REGION=${GCP_REGION:-us-central1}
      - GCS_BUCKET=${GCS_BUCKET}
    volumes:
      - ${WWW_PATH:-./www}:/www:ro
      - ./config:/config:ro
      - ./nginx:/nginx:ro
      - ./ssl:/ssl:ro
      - backup-data:/backups
      - ./sa.json:/tmp/sa.json:ro
    networks:
      - fenixlight-net
    depends_on:
      db:
        condition: service_healthy

networks:
  fenixlight-net:
    driver: bridge

volumes:
  db-data:
  backup-data:
